import "FileRoot.idl";
import "Operation.idl";
import "LinkedMap.idl";
import "Theorem.idl";
import "Obj.idl";
import "Type.idl";
import "TheoremPanel.idl";
namespace Logic_Playground
{
    [default_interface]
    runtimeclass MainPage : Microsoft.UI.Xaml.Controls.Page
    {
        MainPage();
        void Self(MainPage self);
        Microsoft.UI.Xaml.Controls.TabViewItem Position;
        void Parent(MainPage parent);
        FileRoot Root;
        String Header;
        void InitAsAssume(Theorem assumption, TheoremPanel panel);
        void InitAsArbitraryO(Obj aO);
        void InitAsArbitraryT(Type aT);
		Operation ParseOperation(String str);
        Operation RedoOperation(Operation TMDoperation);
        void RemoveObject(String name);
        void RemoveType(String name);
        void RemoveTheorem(String name);
        void RemoveScope();
        void RemoveExport(String name);
        void RemoveExit();
        void AddTheorem(Theorem theorem, TheoremPanel panel);
        void RemoveScope2(String name);
        IVectorView<MainPage> Children{ get; };
        Microsoft.UI.Xaml.Controls.UIElementCollection Path{ get; };
        LinkedMap Objects{ get; };
        LinkedMap Types{ get; };
        LinkedMap Theorems{ get; };
        [default_overload]
        void Display();
        void Display(Microsoft.UI.Xaml.UIElement item);
        void ShowError();
    }
}
